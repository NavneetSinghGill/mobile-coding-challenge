//
//  PodcastDetailViewController.swift
//  mobile-coding-challenge
//
//  Created by Navneet Singh Gill on 2023-05-04.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PodcastDetailDisplayLogic: AnyObject {
    func displaySomething(viewModel: PodcastDetail.Something.ViewModel)
}

class PodcastDetailViewController: UIViewController, PodcastDetailDisplayLogic {
    
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var publisherNameLabel: UILabel!
    @IBOutlet weak var descriptionLabel: UILabel!
    
    @IBOutlet weak var thumbnailImageView: UIImageView!
    
    @IBOutlet weak var favouriteButton: UIButton!
    @IBOutlet weak var backButton: UIButton!
    
    var podcast: Podcast?
    
    var interactor: PodcastDetailBusinessLogic?
    var router: (NSObjectProtocol & PodcastDetailRoutingLogic & PodcastDetailDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = PodcastDetailInteractor()
        let presenter = PodcastDetailPresenter()
        let router = PodcastDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
        loadPodcast()
        setUI()
    }
    
    //MARK: Private methods
    
    func loadPodcast() {
        if let podcast = podcast {
            titleLabel.text = podcast.title
            publisherNameLabel.text = podcast.name
            descriptionLabel.text = podcast.description
            
            if let url = URL(string: podcast.thumbNailUrl) {
                thumbnailImageView.load(url: url)
            }
        }
    }
    
    func setUI() {
        backButton.setImage(UIImage(systemName: "chevron.backward"), for: .normal)
        thumbnailImageView.layer.cornerRadius = 20
        
        favouriteButton.backgroundColor = .red
        favouriteButton.layer.cornerRadius = 10
    }
    
    //MARK: Action methods
    
    @IBAction func backButtonTouchUpInside() {
        self.dismiss(animated: true)
    }
    
    @IBAction func favouriteButtonTouchUpInside() {
        
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = PodcastDetail.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: PodcastDetail.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
}
